
@model  WebApplication1dsadasd.ViewModels.FuncionalidadeViewModel
<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
<link href="https://fonts.googleapis.com/css?family=Orbitron" rel="stylesheet">



<div class="container border">
    <h1 class="tit-principal">Microndas</h1>
    <div class="microndas-cabecalho">
        <p class="cabecalho-titulo">Display</p>
        <div class="display">
            <div style="display:none;">
                <p id="origem"></p>
                <p id="segundosParados"></p>
            </div>
            <div id="opcoes" style="display:none;">
                <h2>Recomeçar da ultima parada ?</h2>
                <button data-value="Sim" class="btn btn-danger" onclick="verificarParado(this)">Sim</button>
                <button data-value="Nao" class="btn btn-warning" onclick="verificarParado(this)">Não</button>
            </div>
            <ul id="mostrar-detalhes" />
            <p class="contador">Bem Vindo!</p>
            <ul id="contador-list" />
            <div id="botoesParar" style="display:none;">
                <button data-value="Sim" class="btn btn-danger" onclick="PararCronometro();">Parar</button>
                <button data-value="Nao" class="btn btn-warning" onclick="CancelarCronometro();">Cancelar</button>
            </div>
        </div>
    </div>

    <div class="entrada-data col-md-12">
        @using (Html.BeginForm("ChangeTime", "HomeController"))
        {
            <div class="form-group">
                <div class="col-md-4 ">
                    <div class="input-group">
                        @Html.Label("NomeProduto")
                        @Html.TextBox("NomeProduto", "", new { @class = "form-control" })

                        <span class="input-group-btn">
                            <button id="produto" class="btn btn-danger" style="margin-top:25px;">Inserir Produto</button>
                        </span>
                    </div>
                    <br />
                    <div class="fileUpload btn btn-primary">
                        <span>Para enviar um arquivo clique aqui</span>
                        <input id="arquivo " type="file" name="file"  class="upload form-control" accept=".txt" />
                        
                    </div>
                    <button class="btn btn-success" id="btn-Dowload" style="margin-top:10px;">
                        Dowload do arquivo Assado
                    </button>

                </div>
                <div class="col-md-4">
                    @Html.Label("Programas")
                    @Html.DropDownList("Programs", new SelectList(Model.FuncionalidadesDropDown, "Nome", "Nome", "Selecione um programa"), new { @class = "form-control" })
                </div>
                <div class="col-md-4 ">
                    @Html.Label("Tempo")
                    @Html.TextBox("Tempo", "", new { @class = "form-control" })
                </div>


            </div>
            <div class="form-group">
                <div class="col-md-offset-4 col-md-4">
                    @Html.Label("Potencia")
                    @Html.TextBox("Potencia", "", new { @class = "form-control" })
                </div>
            </div>
      

        }
        
    </div>
    <div class="botao-wrapper col-md-12 ">
        <div class="col-md-4 col-md-offset-4">
            <h3>Opções</h3>
        </div>
        <div class="grupoBotoes col-md-12">
            <div class="col-md-6 col-md-offset-4">
                <button id="assar" class="btn btn-primary btn-lg">Assar</button>
                <button id="tempo" class="btn btn-primary btn-lg">Tempo</button>
                <button id="potenciaBTN" class="btn btn-primary btn-lg">Potencia</button>
            </div>
        </div>
        <div class="grupoBotoes col-md-12">
            <div class="col-md-6 col-md-offset-4">
                <button class="btn btn-primary btn-lg" type="button" data-toggle="modal" data-target="#exampleModal">Novo </button>
                <button id="rapido" class="btn btn-primary btn-lg">Rapido </button>
                <button id="detalhe" class="btn btn-primary btn-lg">Detalhe</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nova Programação</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="form-novo">
                    <div class="form-group">
                        <div class="col-md-2">
                            @Html.Label("Potencia")
                            @Html.TextBox("NovoPotencia", "", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.Label("Tempo")
                            @Html.TextBox("NovoTempo", "", new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.Label("String")
                            @Html.TextBox("cozimentoString", "", new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Nome")
                            @Html.TextBox("Nome", "", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Instrucoes")
                        @Html.TextBox("Instrucoes", "", new { @class = "form-control" })
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-primary" id="salvar">Salvar</button>
            </div>
        </div>
    </div>
</div>
<iframe id="download-archive" style="display:none"></iframe>


<script>

    $(document).ready(() => {
        $("input.btn-primary").attr('disabled', 'disabled');
        $("#Programs").attr('disabled', 'disabled')
        $("#Tempo").attr('disabled', 'disabled')
        $("#Potencia").attr('disabled', 'disabled')
        $("#btn-Dowload").attr('disabled', 'disabled')

        $(".contador").typeTo("Insira um Produto para começarmos");
      
    })

    $('#btn-Dowload').on('click', event => {
        event.preventDefault();

        let path = $('#origem').text();
        $.ajax({
            url: '/Microndas/Download',
            data: { "filePath": path, "mode": "action" },
            method: 'GET',
            success: data => {
                $('#download-archive').attr('src', '/Microndas/Download?filePath=' + data.fileName + '&mode=dowload');
            }
        })
      
    })
    $('#salvar').on('click', event => {
        event.preventDefault();
        let enviar = true

        if ($('#NovoPotencia').val() == "") {
            swal(
                'Ops...',
                'Potencia não pode ficar vazio',
                'error'
            )
            enviar = false
        }
        if ($('#Nome').val() == "") {
            swal(
                'Ops...',
                'Nome não pode ficar vazio',
                'error'
            )
            enviar = false
        }
        if ($('#NovoTempo').val() == "") {
            swal(
                'Ops...',
                'Tempo não pode ficar vazio',
                'error'
            )
            enviar = false
        }
        if ($('#cozimentoString').val() == "") {
            swal(
                'Ops...',
                'String não pode ficar vazio',
                'error'
            )
            enviar = false
        }
        if ($('#Instrucoes').val() == "") {
            swal(
                'Ops...',
                'Instrucoes não pode ficar vazio',
                'error'
            )
            enviar = false
        }

        if (enviar == true) {
            let form = $('#form-novo').serialize();
            $.post('/Microndas/Novo', form, data => {
                if (data.ok == true) {
                    location.reload();
                } else {
                    swal(
                        'Ops...',
                        data.msg,
                        'error'
                    )
                }
            })   
        }
        
    })
    $("#produto").on('click', event => {
        event.preventDefault();
        $("#btn-Dowload").attr('disabled', 'disabled')
        $('#origem').html('');


        const NomeProduto = $('[name="NomeProduto"]').val()
        if (NomeProduto == "") {
            swal(
                'Ops...',
                'Produto não pode ficar vazio.',
                'error'
            )
        } else {
            $.post('/Microndas/StringCozida', { "Produto": NomeProduto }, data => {
                $('.contador .contador-list').html('');
                $(".contador").typeTo(data.produto);
                $("input").removeAttr('disabled');
                $("select").removeAttr('disabled');
                $(".btn-primary").removeAttr('disabled');
                $("#origem").html('');
            })
        }
    })

    $('#tempo').on('click', event => {
        event.preventDefault();
        const Tempo = $('[name="Tempo"]').val();
        if (Tempo == "") {
            swal(
                'Ops...',
                'Tempo não pode ficar vazio.',
                'error'
            )
        } else {
            $.post('/Microndas/Tempo', { "Tempo": Tempo }, data => {
                if (data.ok == true) {
                    swal(
                        'Ops...',
                        'Tempo alterado com sucesso.',
                        'success'
                    )
                    $('#Tempo').val('');
                } else {
                    swal(
                        'Ops...',
                        data.msg,
                        'error'
                    )
                   
                }
            })
        }

    })


    $('#potenciaBTN').on('click', event => {
        event.preventDefault();
        const potencia = $('[name="Potencia"]').val();

        if (potencia == "") {
            swal(
                'Ops...',
                'Potencia não pode ficar vazio',
                'error'
            )

        } else {
            $.post('/Microndas/Potencia', { "Potencia": potencia }, data => {
                if (data.ok == true) {
                    swal(
                        'Ops...',
                        'Potencia alterado com sucesso.',
                        'success'
                    )
                    $('#Potencia').val('');
                } else {
                    swal(
                        'Ops...',
                        data.msg,
                        'error'
                    )
                }
            })
        }
    })


    $('#rapido').on('click', event => {
        event.preventDefault();
        $('#mostrar-detalhes li').remove();
        $('#contador-list li').remove();
        $.post('/Microndas/InicioRapido', {}, data => {
            let stringacozinhar = $(".contador").text()
            segundos = data.Objeto.Tempo
            metade = segundos / 2
            stringCount = cozinharString(data.Objeto.Potencia, data.Objeto.CozimentoString)
            contagem_tempo(stringCount, stringacozinhar, metade)
        })
    })


    $('#novo').on('click', event => {
        event.preventDefault();
        $.post('/Microndas/Novo', {}, data => {
            
        })
    })


    $('#assar').on('click', event => {
        event.preventDefault();
        let Programa = $('#Programs').val();
        let stringacozinhar = $(".contador").text()
        let segundosParados = $('#segundosParados').text() != "" ? parseInt($('#segundosParados').text()) : 0

        $('#mostrar-detalhes li').remove();
        $('#contador-list li').remove();
      
        if (segundosParados != 0){
            $('#opcoes').show();
        }else {
            assar(Programa,stringacozinhar);
        }
       
    })

    $('#detalhe').on('click', event => {
        event.preventDefault();
        let programa = $('#Programs').val();
        $('#mostrar-detalhes li').remove();

        if (programa != "") {
            $.post('/Microndas/Detalhe', { "Programa": programa }, data => {
                let obj = data.objeto
                $('#mostrar-detalhes').append(`<li class='color-red'>Nome: ${obj.Nome} </li>`);
                $('#mostrar-detalhes').append(`<li class='color-red'>Potencia: ${obj.Potencia}</li>`);
                $('#mostrar-detalhes').append(`<li class='color-red'>Tempo: ${obj.Tempo}</li>`);
                $('#mostrar-detalhes').append(`<li class='color-red'>Instruções: ${obj.Instrucoes}</li>`);
                $('#mostrar-detalhes').append(`<li class='color-red'>StringCozimento: ${obj.CozimentoString}</li>`);

            })
        } else {
            swal(
                'Ops...',
                'Programa não selecionado',
                'error'
            )
        }
    })

  
    $('input[type="file"]').on('change', event => {
        let form = new FormData();
        $('#btn-Dowload').attr('disabled', 'disabled');
        $('#origem').html('');
        form.append('arquivo', event.target.files[0]);

        $.ajax({
            url: '/Microndas/Upload',
            data: form,
            processData: false,
            contentType: false,
            type: 'POST',
            success: data => {
                if (data.ok == false) {
                    alert(data.aviso)
                } else {
                    $('.contador .contador-list').html('');
                    $(".contador").typeTo(data.stringLida);
                    $("input").removeAttr('disabled');
                    $("select").removeAttr('disabled');
                    $(".btn-primary").removeAttr('disabled');
                    $("#origem").append(data.caminho);
                }
            }
        })
    })


    
    function PararCronometro() {
        segundosParados ^= segundos;
        segundos = 0
        $('#segundosParados').append(segundosParados);

    }

    function CancelarCronometro() {
        segundos = 0
    }


    var segundos;
    var stringCount;
    var bindColor;
    var metade;
    var segundosParados;
    var parar;

 
    function contagem_tempo(stringCount, stringacozinhar, metade) {
        $('#botoesParar').show();
        segundos = segundos - 1;
         
        if (segundos == -1) {
            segundos = 0;

        }
        bindColor = segundos < metade ? 'color-yellow' : ''
        $('#contador-list').append("<li class='" + bindColor + "'>" + stringacozinhar + stringCount + "</li>");
        let path = $('#origem').text();
        if (path != "") {
            $.post('/Microndas/Atualizar', { "path": path, "conteudo": stringacozinhar + stringCount }, data => {
                if (data.ok != true) {
                    swal(
                        'Ops...',
                        data.aviso,
                        'warning'
                    )
                }
            })
        }
        if (segundos != 0) {
            timerID = setTimeout("contagem_tempo('" + stringCount + "','" + stringacozinhar + "','" + metade +"')", 1000);
        }else {
            $('#contador-list').append("<li class='color-red'>aquecida.</li>");
            if (path != "") {
                $.post('/Microndas/Atualizar', { "path": path, "conteudo": "aquecida" }, data => {
                    if (data.ok != true) {
                        swal(
                            'Ops...',
                            data.aviso,
                            'warning'
                        )
                    } else {
                        $("#btn-Dowload").removeAttr('disabled');

                    }
                })
            }
            swal(
                'Aquecida',
                'String ' + stringacozinhar + " Foi aquecida",
                'success'
            )
            $('#botoesParar').hide();
        }
    }


    function cozinharString(potencia, cozimentoString) {
        var stringCozinhada = ""
        for (var i = 0; i < potencia; i++)
        {
            stringCozinhada = stringCozinhada + cozimentoString;
        }

        return stringCozinhada
    }


    function verificarParado(element) {

        let flag = $(element).data('value')
        let segundosParados = $('#segundosParados').text() != "" ? parseInt($('#segundosParados').text()) : 0
        let Programa = $('#Programs').val();
        let stringacozinhar = $(".contador").text()

        if (flag == 'Sim') {
            $('#opcoes').hide();
            $('#segundosParados').html('');
            assar(Programa, stringacozinhar, segundosParados)
        } else {
            $('#opcoes').hide();
            $('#segundosParados').html('');

            assar(Programa, stringacozinhar)

        }
    }

    function assar(Programa, stringacozinhar, segundosParados) {
        $.post("/Microndas/Programa", { "Programa": Programa, "String": stringacozinhar }, data => {
            if (data.ok == true) {
                segundos = typeof segundosParados == 'undefined' ? data.ObjPrograma.Tempo : segundosParados
                metade = segundos / 2
                stringCount = cozinharString(data.ObjPrograma.Potencia, data.ObjPrograma.CozimentoString)
                contagem_tempo(stringCount, stringacozinhar, metade)
            } else {
                $('#contador-list').append("<li class='color-red'>Programa não é compativel com o produto</li>");
            }
        });
    }
</script>